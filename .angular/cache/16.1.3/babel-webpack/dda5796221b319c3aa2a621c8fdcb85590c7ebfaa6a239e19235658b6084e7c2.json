{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api/users'; // Spring Boot backend URL\n  }\n\n  getUsers() {\n    return this.http.get(this.baseUrl);\n  }\n  getUser(id) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get(url);\n  }\n  createUser(user) {\n    return this.http.post(this.baseUrl, user);\n  }\n  updateUser(id, user) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.put(url, user);\n  }\n  deleteUser(id) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete(url);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserService","constructor","http","baseUrl","getUsers","get","getUser","id","url","createUser","user","post","updateUser","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/nazeninsahin/eclipse-workspace/gaz0line/myapp-frontend/src/app/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl = 'http://localhost:8080/api/users'; // Spring Boot backend URL\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<any> {\n    return this.http.get<any>(this.baseUrl);\n  }\n\n  getUser(id: number): Observable<any> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<any>(url);\n  }\n\n  createUser(user: any): Observable<any> {\n    return this.http.post<any>(this.baseUrl, user);\n  }\n\n  updateUser(id: number, user: any): Observable<any> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.put<any>(url, user);\n  }\n\n  deleteUser(id: number): Observable<any> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete<any>(url);\n  }\n}"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,iCAAiC,CAAC,CAAC;EAEb;;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,CAAC;EACzC;EAEAG,OAAOA,CAACC,EAAU;IAChB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,EAAE,EAAE;IACnC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAMG,GAAG,CAAC;EAChC;EAEAC,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAM,IAAI,CAACR,OAAO,EAAEO,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACL,EAAU,EAAEG,IAAS;IAC9B,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,EAAE,EAAE;IACnC,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAAML,GAAG,EAAEE,IAAI,CAAC;EACtC;EAEAI,UAAUA,CAACP,EAAU;IACnB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,IAAII,EAAE,EAAE;IACnC,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAMP,GAAG,CAAC;EACnC;;AA1BWR,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}